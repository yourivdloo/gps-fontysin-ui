[{"D:\\DevelopmentProjects\\java\\groupProject\\gps-fontysin-ui\\src\\index.js":"1","D:\\DevelopmentProjects\\java\\groupProject\\gps-fontysin-ui\\src\\App.js":"2","D:\\DevelopmentProjects\\java\\groupProject\\gps-fontysin-ui\\src\\serviceWorker.js":"3","D:\\DevelopmentProjects\\java\\groupProject\\gps-fontysin-ui\\src\\components\\home.js":"4","D:\\DevelopmentProjects\\java\\groupProject\\gps-fontysin-ui\\src\\components\\navBar.js":"5","D:\\DevelopmentProjects\\java\\groupProject\\gps-fontysin-ui\\src\\components\\page404.js":"6","D:\\DevelopmentProjects\\java\\groupProject\\gps-fontysin-ui\\src\\components\\SearchResults.js":"7","D:\\DevelopmentProjects\\java\\groupProject\\gps-fontysin-ui\\src\\components\\PrivateRoute.js":"8","D:\\DevelopmentProjects\\java\\groupProject\\gps-fontysin-ui\\src\\components\\profileSetup.js":"9","D:\\DevelopmentProjects\\java\\groupProject\\gps-fontysin-ui\\src\\components\\Settings.js":"10","D:\\DevelopmentProjects\\java\\groupProject\\gps-fontysin-ui\\src\\components\\profile.js":"11","D:\\DevelopmentProjects\\java\\groupProject\\gps-fontysin-ui\\src\\components\\chat.js":"12","D:\\DevelopmentProjects\\java\\groupProject\\gps-fontysin-ui\\src\\components\\exportCV.js":"13","D:\\DevelopmentProjects\\java\\groupProject\\gps-fontysin-ui\\src\\components\\guestProfile\\GuestProfile.js":"14","D:\\DevelopmentProjects\\java\\groupProject\\gps-fontysin-ui\\src\\components\\AddressForm.js":"15","D:\\DevelopmentProjects\\java\\groupProject\\gps-fontysin-ui\\src\\components\\WorkForm.js":"16","D:\\DevelopmentProjects\\java\\groupProject\\gps-fontysin-ui\\src\\components\\Review.js":"17","D:\\DevelopmentProjects\\java\\groupProject\\gps-fontysin-ui\\src\\services\\UserProfileService.js":"18","D:\\DevelopmentProjects\\java\\groupProject\\gps-fontysin-ui\\src\\components\\ResumeComponents\\experience.js":"19","D:\\DevelopmentProjects\\java\\groupProject\\gps-fontysin-ui\\src\\components\\ResumeComponents\\skills.js":"20","D:\\DevelopmentProjects\\java\\groupProject\\gps-fontysin-ui\\src\\components\\ResumeComponents\\education.js":"21","D:\\DevelopmentProjects\\java\\groupProject\\gps-fontysin-ui\\src\\components\\ResumeComponents\\header.js":"22","D:\\DevelopmentProjects\\java\\groupProject\\gps-fontysin-ui\\src\\entities\\UserProfile.js":"23","D:\\DevelopmentProjects\\java\\groupProject\\gps-fontysin-ui\\src\\globals\\globalVariables.js":"24","D:\\DevelopmentProjects\\java\\groupProject\\gps-fontysin-ui\\src\\components\\ResumeComponents\\title.js":"25","D:\\DevelopmentProjects\\java\\groupProject\\gps-fontysin-ui\\src\\components\\ResumeComponents\\list.js":"26"},{"size":607,"mtime":1610445034210,"results":"27","hashOfConfig":"28"},{"size":1411,"mtime":1610445039287,"results":"29","hashOfConfig":"28"},{"size":5086,"mtime":1606575338439,"results":"30","hashOfConfig":"28"},{"size":7829,"mtime":1610445039293,"results":"31","hashOfConfig":"28"},{"size":3471,"mtime":1610445039295,"results":"32","hashOfConfig":"28"},{"size":390,"mtime":1606575338435,"results":"33","hashOfConfig":"28"},{"size":4072,"mtime":1610445034207,"results":"34","hashOfConfig":"28"},{"size":704,"mtime":1610445034204,"results":"35","hashOfConfig":"28"},{"size":10928,"mtime":1610445034207,"results":"36","hashOfConfig":"28"},{"size":10387,"mtime":1610445039323,"results":"37","hashOfConfig":"28"},{"size":39792,"mtime":1610445039296,"results":"38","hashOfConfig":"28"},{"size":5635,"mtime":1610445039288,"results":"39","hashOfConfig":"28"},{"size":3175,"mtime":1610445039293,"results":"40","hashOfConfig":"28"},{"size":20477,"mtime":1610447952918,"results":"41","hashOfConfig":"28"},{"size":7326,"mtime":1610445034196,"results":"42","hashOfConfig":"28"},{"size":4052,"mtime":1610445034209,"results":"43","hashOfConfig":"28"},{"size":3572,"mtime":1610445034207,"results":"44","hashOfConfig":"28"},{"size":2386,"mtime":1610445039321,"results":"45","hashOfConfig":"28"},{"size":4609,"mtime":1610445039296,"results":"46","hashOfConfig":"28"},{"size":1255,"mtime":1610445039319,"results":"47","hashOfConfig":"28"},{"size":762,"mtime":1610445039295,"results":"48","hashOfConfig":"28"},{"size":1389,"mtime":1610445039318,"results":"49","hashOfConfig":"28"},{"size":2135,"mtime":1610448001417,"results":"50","hashOfConfig":"28"},{"size":113,"mtime":1610445039320,"results":"51","hashOfConfig":"28"},{"size":380,"mtime":1610445039320,"results":"52","hashOfConfig":"28"},{"size":658,"mtime":1610445039318,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"11gbj1h",{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"56"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"56"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"56"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"56"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\DevelopmentProjects\\java\\groupProject\\gps-fontysin-ui\\src\\index.js",[],["116","117"],"D:\\DevelopmentProjects\\java\\groupProject\\gps-fontysin-ui\\src\\App.js",["118"],"import React from \"react\";\r\nimport Navbar from \"./components/navBar\"\r\nimport chat from \"./components/chat\";\r\nimport home from \"./components/home\";\r\nimport profile from \"./components/profile\";\r\nimport profileSetup from \"./components/profileSetup\"\r\nimport page404 from \"./components/page404\";\r\nimport Settings from './components/Settings';\r\nimport SearchResults from './components/SearchResults';\r\nimport guestprofile from \"./components/guestProfile/GuestProfile\";\r\nimport PrivateRoute from \"./components/PrivateRoute\";\r\nimport { BrowserRouter as Router, Route, Switch, withRouter} from \"react-router-dom\";\r\nimport exportCV from './components/exportCV';\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <Router>\r\n      <Navbar/>\r\n      <Switch>\r\n        {/* <Route path=\"/\" component={home} exact/> */}\r\n        <PrivateRoute exact path=\"/\" component={home}  />\r\n        <PrivateRoute exact path=\"/profile\" component={profile}/>\r\n        <PrivateRoute path=\"/chat\" component={chat}/>\r\n        <Route path=\"/profileSetup\" component={profileSetup}/>\r\n        <PrivateRoute path=\"/guestprofile/:pcn\" component={guestprofile}/>\r\n        <PrivateRoute path=\"/settings\" component={Settings}/>\r\n        <PrivateRoute path=\"/results/:query\" component={SearchResults}/>\r\n        <PrivateRoute path=\"/exportCV\" component={exportCV}/>\r\n        <Route component={page404}/>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport \r\n{App};\r\n","D:\\DevelopmentProjects\\java\\groupProject\\gps-fontysin-ui\\src\\serviceWorker.js",[],"D:\\DevelopmentProjects\\java\\groupProject\\gps-fontysin-ui\\src\\components\\home.js",[],"D:\\DevelopmentProjects\\java\\groupProject\\gps-fontysin-ui\\src\\components\\navBar.js",[],"D:\\DevelopmentProjects\\java\\groupProject\\gps-fontysin-ui\\src\\components\\page404.js",[],"D:\\DevelopmentProjects\\java\\groupProject\\gps-fontysin-ui\\src\\components\\SearchResults.js",["119","120","121","122","123","124","125"],"import React, {useState, useEffect} from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CameraIcon from '@material-ui/icons/PhotoCamera';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport UserProfileService from \"../services/UserProfileService\";\r\nimport Link from '@material-ui/core/Link';\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  icon: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  heroContent: {\r\n    backgroundColor: \"#8D5C97\",\r\n    padding: theme.spacing(4, 0, 2),\r\n  },\r\n  heroButtons: {\r\n    marginTop: theme.spacing(4),\r\n  },\r\n  cardGrid: {\r\n    paddingTop: theme.spacing(8),\r\n    paddingBottom: theme.spacing(8),\r\n  },\r\n  card: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  cardMedia: {\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  cardContent: {\r\n    flexGrow: 1,\r\n  },\r\n  firstName: {\r\n      color: 'white',\r\n  },\r\n}));\r\n\r\nconst cards = [1, 2, 3, 4, 5, 6, 7, 8, 9];\r\n\r\nfunction SearchResults(props) {\r\n  const classes = useStyles();\r\n  const [results, setResults] = useState([]);\r\n\r\n  useEffect(() =>{\r\n      async function getResults(){\r\n        var r = await UserProfileService.searchByName(props.match.params.query);\r\n        console.log(r);\r\n        setResults(r);\r\n      }\r\n      getResults();\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <main>\r\n        {/* Hero unit */}\r\n        <div className={classes.heroContent}>\r\n          <Container maxWidth=\"sm\">\r\n          <Typography component=\"h1\" variant=\"h4\" className={classes.firstName} align=\"center\" color=\"textPrimary\" gutterBottom>\r\n        \r\n            {results.length == 1 ? \r\n            <div>\r\n            Found {results.length} result for '{props.match.params.query}'\r\n            </div>\r\n            : \r\n            <div>\r\n            Found {results.length} results for '{props.match.params.query}'\r\n            </div>\r\n            }\r\n\r\n            </Typography>\r\n          </Container>\r\n        </div>\r\n        <Container className={classes.cardGrid} maxWidth=\"md\">\r\n          {/* End hero unit */}\r\n          <Grid container spacing={4}>\r\n            {results.map((card) => (\r\n              <Grid item key={card} xs={12} sm={6} md={4}>\r\n                <Card className={classes.card}>\r\n                  <CardMedia\r\n                    className={classes.cardMedia}\r\n                    image=\"https://source.unsplash.com/random\"\r\n                    title=\"Image title\"\r\n                  />\r\n                  <CardContent className={classes.cardContent}>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                      {card.lastName}, {card.firstName} {card.prefix}\r\n                    </Typography>\r\n                    <Typography>\r\n                      {card.isStudent ? \r\n                    <div>\r\n                        Student\r\n                    </div>  :\r\n                    <div>\r\n                        Teacher\r\n                    </div>\r\n                    }\r\n                    </Typography>\r\n                  </CardContent>\r\n                  <CardActions>\r\n                    <Button size=\"small\" color=\"primary\" href={\"/guestprofile/\" + card.pcn}>\r\n                      View profile\r\n                    </Button>\r\n                  </CardActions>\r\n                </Card>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Container>\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default withRouter(SearchResults);","D:\\DevelopmentProjects\\java\\groupProject\\gps-fontysin-ui\\src\\components\\PrivateRoute.js",[],"D:\\DevelopmentProjects\\java\\groupProject\\gps-fontysin-ui\\src\\components\\profileSetup.js",[],"D:\\DevelopmentProjects\\java\\groupProject\\gps-fontysin-ui\\src\\components\\Settings.js",["126","127","128","129","130","131"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MuiPhoneNumber from \"material-ui-phone-number\";\r\nimport {TextField} from '@material-ui/core';\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport axios from \"axios\";\r\nimport baseUrl from \"./../globals/globalVariables\"\r\n\r\nfunction TabPanel(props) {\r\n    const {children, value, index, ...other} = props;\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`vertical-tabpanel-${index}`}\r\n            aria-labelledby={`vertical-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={3}>\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `vertical-tab-${index}`,\r\n        'aria-controls': `vertical-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nfunction LinkTab(props) {\r\n    return (\r\n        <Tab\r\n            component=\"a\"\r\n            onClick={(event) => {\r\n                event.preventDefault();\r\n            }}\r\n            {...props}\r\n        />\r\n    );\r\n}\r\nconst styles = (theme) => ({\r\n    root: {\r\n        flexGrow: 2,\r\n        backgroundColor: theme.palette.background.paper,\r\n        display: 'flex',\r\n        height: 224,\r\n        // color: green[400], //radio button\r\n        // '&$checked': {\r\n        //     color: green[600],\r\n    },\r\n    tabs: {\r\n        borderRight: `1px solid ${theme.palette.divider}`,\r\n        position: \"static\",\r\n        alignItems: \"center\",\r\n        flexDirection: 'column',\r\n    },\r\n    footer: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        padding: theme.spacing(6),\r\n    },\r\n    tableSettings: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    }\r\n});\r\n// export default function VerticalTabs() {\r\n//     const classes = useStyles();\r\n//     const [value, setValue] = React.useState(0);\r\n//\r\n//     const handleChange = (event, newValue) => {\r\n//         setValue(newValue);\r\n//     };\r\nconst personalData = Object({\r\n        description: \"\",\r\n        address: \"\",\r\n        zipCode: \"\",\r\n        phoneNumber: \"\",\r\n        city: \"\",\r\n    }\r\n);\r\n\r\nclass Settings extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            defaultValues: {\r\n                value: 0,\r\n                tabValue: 0, //TODO issue with the first load of the page, page is blank and the tab has to be selected\r\n                phone: \"\",\r\n                adress: \"\",\r\n                zipcode: \"\",\r\n                city: \"\",\r\n                disconnected: false\r\n            }\r\n        };\r\n        this.handlePhoneChange = this.handlePhoneChange.bind(this);\r\n        this.handleAddressChange = this.handleAddressChange.bind(this);\r\n        this.handleZipCodeChange = this.handleZipCodeChange.bind(this);\r\n        this.handleCityChange = this.handleCityChange.bind(this);\r\n        this.tabHandleChange = this.tabHandleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        var headers = {\r\n          \"x-ms-client-principal-name\": \"410078@student.fontys.nl\",\r\n        };\r\n    \r\n        axios\r\n          .get(baseUrl + \"/api/user/\"+ localStorage.getItem(\"pcn\"), { headers: headers })\r\n          .then((result) => {\r\n            this.setState({ formData: result.data, phone: result.data.phoneNumber, city: result.data.city, zipcode: result.data.zipCode, address: result.data.address });\r\n            console.log(result.data);\r\n          })\r\n          .catch((e) =>\r\n          {\r\n           console.log(e)\r\n           this.state.disconnected = true;\r\n          });\r\n      }\r\n\r\n    tabHandleChange = (event, newValue) => {\r\n        this.setState({tabValue: newValue});\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        if(!this.state.disconnected){\r\n        var personalData = this.state.formData;\r\n        console.log(personalData);\r\n    \r\n        var headers = {\r\n            'x-ms-client-principal-name': personalData.pcn + '@student.fontys.nl'\r\n        } \r\n\r\n        axios.put(baseUrl + \"/api/user/\" + personalData.pcn, personalData, { headers: headers });\r\n        this.props.history.push(\"/guestprofile\")\r\n        }\r\n    }\r\n\r\n    handlePhoneChange = (value) => {\r\n        this.setState({phone: value});\r\n        this.state.formData.phoneNumber = value;\r\n    }\r\n\r\n    handleAddressChange = (e) => {\r\n        this.setState({address: e.target.value});\r\n        this.state.formData.address = e.target.value;\r\n    }\r\n\r\n    handleZipCodeChange = (e) => {\r\n        this.setState({zipcode: e.target.value});\r\n        this.state.formData.zipCode = e.target.value;\r\n    }\r\n\r\n    handleCityChange = (e) => {\r\n        this.setState({city: e.target.value});\r\n        this.state.formData.city = e.target.value;\r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n        const tabSteps = [\"Account Preferences\", \"Permissions\", \"Profile visibility\", \"Appearance\"];\r\n        // const classes = styles();\r\n        // const [value, setValue] = React.useState(0);\r\n        return (\r\n            <div className={classes.root}>\r\n                <Tabs\r\n                    orientation=\"vertical\"\r\n                    variant=\"scrollable\"\r\n                    value={this.state.tabValue}\r\n                    onChange={this.tabHandleChange}\r\n                    aria-label=\"Vertical tabs example\"\r\n                    className={classes.tabs}\r\n                >\r\n                    <LinkTab label={tabSteps[0]} {...a11yProps(0)} />\r\n                    <LinkTab label={tabSteps[1]}   {...a11yProps(1)} />\r\n                    <LinkTab label={tabSteps[2]}  {...a11yProps(2)} />\r\n                    <LinkTab label={tabSteps[3]}   {...a11yProps(3)} />\r\n                </Tabs>\r\n\r\n                <TabPanel value={this.state.tabValue} index={0}> {/* Account preferences tab*/}\r\n                    <Grid item xs={12} md={12} style={{textAlign: \"left\"}}>\r\n                        <h2>Edit your profile description</h2>\r\n                        <TextField id=\"descriptionField\" placeholder={\"Write a description\"} variant=\"filled\"\r\n                                   multiline inputProps={{rowsMax: 15, maxLength: 200}}/> {/*Description*/}\r\n                        <br/>\r\n                        <MuiPhoneNumber\r\n                            name=\"phone\"\r\n                            label=\"Phone number\"\r\n                            data-cy=\"user-phone\"\r\n                            defaultCountry={\"nl\"}\r\n                            value={this.state.phone}\r\n                            onChange={this.handlePhoneChange}\r\n                        />\r\n                        <br/>\r\n                        <TextField \r\n                            label=\"Address\"\r\n                            value={this.state.address}\r\n                            onChange={this.handleAddressChange}\r\n                            InputLabelProps = {{shrink:true}}\r\n                        />\r\n                        <br/>\r\n                        <TextField \r\n                            label=\"Zip code\"\r\n                            value={this.state.zipcode} \r\n                            inputProps={{maxLength: 8}}\r\n                            onChange={this.handleZipCodeChange}\r\n                            InputLabelProps = {{shrink: true}}\r\n                        />\r\n                        <br/>\r\n                        <TextField \r\n                            label=\"City\"\r\n                            value={this.state.city}\r\n                            onChange={this.handleCityChange}\r\n                            InputLabelProps = {{shrink: true}}\r\n                        />\r\n                        <br/>\r\n                        <Button variant=\"contained\" color=\"primary\" disabled={this.state.disconnected} onClick={this.handleSubmit}>Save changes</Button>\r\n                        <Button variant=\"contained\" color=\"secondary\" onClick={() => this.props.history.push(\"/guestProfile\")}>Cancel</Button>\r\n                    </Grid>\r\n                </TabPanel>\r\n\r\n                <TabPanel value={this.state.tabValue} index={1}> {/*Permissions*/}\r\n                    <TextField placeholder={\"\"}/>\r\n                </TabPanel>\r\n\r\n                <TabPanel value={this.state.tabValue} index={2}>{/*Visibility*/}\r\n                    <FormControl component=\"fieldset\">\r\n                        <FormLabel component=\"legend\">Change profile visibility</FormLabel>\r\n                        <p>Determines the way profiles will be indexed through the search engine.</p>\r\n                        <RadioGroup aria-label=\"visibility\" name=\"visibility\" value={this.state.value}\r\n                                    onChange={this.handleChange}>\r\n                            <FormControlLabel value=\"X (Private, not indexed in the search engine)\" control={<Radio/>}  label=\"Public\"/>\r\n                            <FormControlLabel value=\"1 (Can only be found by name)\" control={<Radio/>} label=\"Private\"/>\r\n                            <FormControlLabel value=\"2 (Can be found by name or study)\" control={<Radio/>} label=\"Private\"/>\r\n                            <FormControlLabel value=\"3 (Can be found by name, study and skills)\" control={<Radio/>} label=\"Private\"/>\r\n\r\n                        </RadioGroup>\r\n                    </FormControl>\r\n                </TabPanel>\r\n\r\n                <TabPanel value={this.state.tabValue} index={3}>{/*Appearance*/}\r\n                    <p>Change appearance</p>\r\n                </TabPanel>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Settings);","D:\\DevelopmentProjects\\java\\groupProject\\gps-fontysin-ui\\src\\components\\profile.js",["132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport UserProfileService from \"../services/UserProfileService\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport axios from \"axios\";\r\nimport baseUrl from \"./../globals/globalVariables\"\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`nav-tabpanel-${index}`}\r\n      aria-labelledby={`nav-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `nav-tab-${index}`,\r\n    \"aria-controls\": `nav-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nfunction LinkTab(props) {\r\n  return (\r\n    <Tab\r\n      component=\"a\"\r\n      onClick={(event) => {\r\n        event.preventDefault();\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  tabs: {\r\n    width: \"100%\",\r\n  },\r\n  tab1: {\r\n    margin: \"1% 0% 1% 0%\",\r\n    display: \"inline-block\",\r\n    border: \"4px solid #EDEAE0\",\r\n  },\r\n  tab2: {\r\n    margin: \"1% 0% 1% 0%\",\r\n    display: \"inline-block\",\r\n    border: \"4px solid #EDEAE0\",\r\n  },\r\n  tabPanel: {\r\n    height: \"250px\",\r\n    overflowY: \"scroll\",\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  heroContent: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(8, 0, 6),\r\n  },\r\n  heroButtons: {\r\n    marginTop: theme.spacing(4),\r\n  },\r\n  cardGrid: {\r\n    paddingTop: theme.spacing(8),\r\n    paddingBottom: theme.spacing(8),\r\n  },\r\n  card: {\r\n    // display: \"flex\",\r\n    // flexDirection: \"column\",\r\n    backgroundColor: \"#8D5C97\",\r\n    marginLeft: \"1%\",\r\n    marginRight: \"1%\",\r\n  },\r\n  cardActions: {\r\n    float: \"left\",\r\n    width: \"10%\",\r\n  },\r\n  cardContent: {\r\n    flexGrow: 1,\r\n    color: \"white\",\r\n    textAlign: \"center\",\r\n  },\r\n  footer: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(6),\r\n  },\r\n  avatar: {\r\n    width: \"200px\",\r\n    height: \"200px\",\r\n    display: \"inline-block\",\r\n    marginTop: \"1%\",\r\n  },\r\n  settings: {\r\n    width: \"50px\",\r\n    height: \"50px\",\r\n    cursor: \"pointer\",\r\n    float: \"left\",\r\n  },\r\n  projectCard: {\r\n    margin: \"0% 5% 0% 5%\",\r\n    display: \"inline-block\",\r\n    height: \"280px\",\r\n    width: '300px',\r\n    overflowY: \"scroll\",\r\n    border: \"4px solid #EDEAE0\",\r\n  },\r\n  dateFields: {\r\n    display: \"inline-block\",\r\n  },\r\n  projectGroup: {\r\n    margin: \"1%\",\r\n    border: \"4px solid #EDEAE0\",\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n\r\nconst personalData = Object({\r\n  pcn: \"\",\r\n  firstName: \"please try again!\",\r\n  prefix: \"\",\r\n  lastName: \"Not connected to database\",\r\n  emailAddress: \"\", ///\r\n  privacySettings: 0, ///\r\n  nationality: \"NL\", ///\r\n  address: \"\",\r\n  isStudent: true,\r\n  // street: \"\",\r\n  // addressnumber: \"\",\r\n  // addressaddition: \"\",\r\n  city: \"\",\r\n  zipCode: \"\",\r\n  birthday: \"\",\r\n  birthPlace: \"\", ///\r\n  phoneNumber: \"\",\r\n  userProperties: [\r\n    {\r\n  studies: [],\r\n  jobs: [],\r\n  skills: [],\r\n  hobbies: [],\r\n  interests: [],\r\n  // languages: [], ///\r\n  // projects: [],\r\n    }\r\n]\r\n});\r\n\r\nconst deletedProps = Object({\r\n  studies: [],\r\n  jobs: [],\r\n  skills: [],\r\n  hobbies: [],\r\n  interests: [],\r\n  // languages: [], ///\r\n  // projects: [],\r\n});\r\n\r\nclass profile extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      disconnected: false,\r\n      shiValues: [],\r\n      sjValues: [],\r\n      skillIndex: 0,\r\n      interestIndex: 0,\r\n      hobbyIndex: 0,\r\n      studyIndex: 0,\r\n      jobIndex: 0,\r\n      projectIndex: 3,\r\n      shiValue: 0,\r\n      sjValue: 0,\r\n      formData: personalData,\r\n      deletedItems: deletedProps,\r\n      skillList: [],\r\n      interestList: [],\r\n      hobbyList: [],\r\n      studyList: [],\r\n      jobList: [],\r\n      // projectList: [{index: 0, name: \"\", url: \"\", users: []}]\r\n      projectList: [\r\n        {\r\n          index: 0,\r\n          name: \"Proftaak semester 1\",\r\n          url: \"github.com/proftaak_sem1\",\r\n          users: [\"hans\", \"pietje\", \"johan\", \"frits\"],\r\n        },\r\n        {\r\n          index: 1,\r\n          name: \"Proftaak semester 2\",\r\n          url: \"github.com/proftaak_sem2\",\r\n          users: [\"freek\", \"jaap\", \"frederik\", \"berend\"],\r\n        },\r\n        {\r\n          index: 2,\r\n          name: \"Proftaak semester 3\",\r\n          url: \"github.com/proftaak_sem3\",\r\n          users: [\"Jack\", \"Nynke\", \"Jayson\", \"Pim\", \"Olivier\", \"Youri\"],\r\n        },\r\n      ],\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.addNewSkill = this.addNewSkill.bind(this);\r\n    this.addNewHobby = this.addNewHobby.bind(this);\r\n    this.addNewInterest = this.addNewInterest.bind(this);\r\n    this.addNewStudy = this.addNewStudy.bind(this);\r\n    this.addNewJob = this.addNewJob.bind(this);\r\n    this.clickOnDelete = this.clickOnDelete.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({deletedItems: Object({\r\n      studies: [],\r\n      jobs: [],\r\n      skills: [],\r\n      hobbies: [],\r\n      interests: [],\r\n      // languages: [], ///\r\n      // projects: [],\r\n      })\r\n    })\r\n  \r\n\r\n    var headers = {\r\n      \"x-ms-client-principal-name\": \"410078@student.fontys.nl\",\r\n    };\r\n\r\n    var newInterests = []\r\n    var newInterestIndex = this.state.interestIndex\r\n\r\n    var newSkills = []\r\n    var newSkillIndex = this.state.skillIndex\r\n\r\n    var newHobbies = []\r\n    var newHobbyIndex = this.state.hobbyIndex\r\n\r\n    var newStudies = []\r\n    var newStudyIndex = this.state.studyIndex\r\n\r\n    var newJobs = []\r\n    var newJobIndex = this.state.jobIndex\r\n\r\n    axios\r\n      .get(baseUrl + \"/api/user/\"+localStorage.getItem('pcn'), { headers: headers })\r\n      .then((result) => {\r\n        this.setState({ formData: result.data });\r\n        console.log(result.data);\r\n\r\n        result.data.userProperties.skills.forEach(obj => {\r\n          newSkills.push({index: newSkillIndex, name: obj.name, label: \"skill\"})\r\n          newSkillIndex++;\r\n\r\n          // this.setState((prevState) => {\r\n          //   skillList: [...prevState.skillList, {index: this.state.skillIndex, name: value.name, label: \"skill\"}]\r\n          //   skillIndex: this.state.skillIndex + 1})\r\n        })\r\n        \r\n        result.data.userProperties.hobbies.forEach(obj => {\r\n          newHobbies.push({index: newHobbyIndex, name: obj.name, label: \"hobby\"})\r\n          newHobbyIndex++;\r\n            // hobbyList: [...prevState.skillList, {index: this.state.hobbyIndex, name: value.name, label: \"hobby\"}]\r\n            // hobbyIndex: this.state.hobbyList + 1\r\n        })\r\n\r\n        result.data.userProperties.interests.forEach(obj => {\r\n            newInterests.push({index: newInterestIndex, name: obj.name, label: \"interest\"})\r\n            newInterestIndex++;\r\n          // this.setState((prevState) => {\r\n          //   interestList: [...prevState.interestList, {index: this.state.interestIndex, name: value.name, label:\"interest\"}]\r\n          //   interestIndex: this.state.interestIndex + 1})\r\n        })\r\n\r\n        result.data.userProperties.studies.forEach(obj => {\r\n          newStudies.push({index: newStudyIndex, name: obj.name, school: obj.school, city: obj.city, endDate: obj.endDate, startDate: obj.startDate, label: \"study\"})\r\n            newStudyIndex++;\r\n            // studyList: [...prevState.studyList, {index: this.state.studyIndex, school: value.school, city: value.city, endDate: value.endDate, startDate: value.startDate, name: value.name, label: \"study\"}]\r\n            // studyIndex: this.state.studyIndex + 1})\r\n        })\r\n\r\n        result.data.userProperties.jobs.forEach(obj => {\r\n          newJobs.push({index: newJobIndex, name: obj.name, school: obj.school, city: obj.city, endDate: obj.endDate, startDate: obj.startDate, label: \"job\"})\r\n          newJobIndex++;\r\n            // jobList: [...prevState.jobsList, {index: this.state.jobIndex, name: value.name, companyName: value.companyName, startDate: value.startDate, endDate: value.endDate, label: \"job\"}]\r\n            // jobIndex: this.state.jobIndex + 1})\r\n        })\r\n\r\n        newHobbies.forEach(obj => {\r\n          this.setState((prevState) => ({hobbyList: [...prevState.hobbyList, obj]}))\r\n        })\r\n\r\n        newInterests.forEach(obj => {\r\n          this.setState((prevState) => ({interestList: [...prevState.interestList, obj]}))\r\n        })\r\n\r\n        newSkills.forEach(obj => {\r\n          this.setState((prevState) => ({skillList: [...prevState.skillList, obj]}))\r\n        })\r\n\r\n        newStudies.forEach(obj => {\r\n          this.setState((prevState) => ({studyList: [...prevState.studyList, obj]}))\r\n        })\r\n\r\n        newJobs.forEach(obj => {\r\n          this.setState((prevState) => ({jobList: [...prevState.jobList, obj]}))\r\n        })\r\n\r\n        this.setState({interestIndex: newInterestIndex, skillIndex: newSkillIndex,\r\n        hobbyIndex: newHobbyIndex, studyIndex: newStudyIndex, jobIndex: newJobIndex})\r\n      \r\n      }).catch((e) => {\r\n          console.log(e)\r\n          this.setState({disconnected: true})\r\n        })\r\n      }\r\n\r\n  shiHandleChange = (event, newValue) => {\r\n    // console.log(event);\r\n    // let shiValues = [...this.state.shiValues];\r\n    // shiValues[0] = event.target.value;\r\n    // this.setState({shiValues});\r\n    this.setState({ shiValue: newValue });\r\n  }\r\n\r\n  sjHandleChange = (event, newValue) => {\r\n    // console.log(event);\r\n    // let sjValues = [...this.state.sjValues];\r\n    // sjValues[0] = event.target.value;\r\n    // this.setState({sjValues});\r\n    this.setState({ sjValue: newValue });\r\n  }\r\n\r\n  // addClick() {\r\n  //     this.setState(prevState => ({values: [...prevState.values, '']}))\r\n  // }\r\n\r\n  addNewSkill = (e) => {\r\n    this.setState((prevState) => ({\r\n      skillList: [\r\n        ...prevState.skillList,\r\n        { index: this.state.skillIndex, name: \"\", label: \"skill\" },\r\n      ],\r\n      skillIndex: this.state.skillIndex + 1,\r\n    }));\r\n    console.log(this.state.formData.userProperties);\r\n\r\n\r\n    this.state.formData.userProperties.skills.push({ name: \"\" });\r\n  }\r\n\r\n  addNewHobby = (e) => {\r\n    this.setState((prevState) => ({\r\n      hobbyList: [\r\n        ...prevState.hobbyList,\r\n        { index: this.state.hobbyIndex, name: \"\", label: \"hobby\" },\r\n      ],\r\n      hobbyIndex: this.state.hobbyIndex + 1,\r\n    }));\r\n    this.state.formData.userProperties.hobbies.push({ name: \"\" });\r\n  }\r\n\r\n  addNewInterest = (e) => {\r\n    this.setState((prevState) => ({\r\n      interestList: [\r\n        ...prevState.interestList,\r\n        { index: this.state.interestIndex, name: \"\", label: \"interest\" },\r\n      ],\r\n      interestIndex: this.state.interestIndex + 1,\r\n    }));\r\n\r\n    this.state.formData.userProperties.interests.push({ name: \"\" });\r\n  }\r\n\r\n  addNewStudy = (e) => {\r\n    this.setState((prevState) => ({\r\n      studyList: [\r\n        ...prevState.studyList,\r\n        {\r\n          index: this.state.studyIndex,\r\n          name: \"\",\r\n          startDate: new Date(),\r\n          endDate: new Date(),\r\n          school: \"\",\r\n          city: \"\",\r\n          label: \"study\",\r\n        },\r\n      ],\r\n      studyIndex: this.state.studyIndex + 1,\r\n    }));\r\n\r\n    this.state.formData.userProperties.studies.push({\r\n      name: \"\",\r\n      school: \"\",\r\n      city: \"\",\r\n      startDate: new Date(),\r\n      endDate: new Date(),\r\n    });\r\n  }\r\n\r\n  addNewJob = (e) => {\r\n    this.setState((prevState) => ({\r\n      jobList: [\r\n        ...prevState.jobList,\r\n        {\r\n          index: this.state.jobIndex,\r\n          name: \"\",\r\n          startDate: new Date(),\r\n          endDate: new Date(),\r\n          companyName: \"\",\r\n          label: \"job\",\r\n        },\r\n      ],\r\n      jobIndex: this.state.jobIndex + 1,\r\n    }));\r\n\r\n    this.state.formData.userProperties.jobs.push({\r\n      name: \"\",\r\n      city: \"\",\r\n      companyName: \"\",\r\n      startDate: new Date(),\r\n      endDate: new Date(),\r\n    });\r\n  }\r\n\r\n  addNewProject = (e) => {\r\n    this.setState((prevState) => ({\r\n      projectList: [\r\n        ...prevState.projectList,\r\n        {\r\n          index: this.state.projectIndex,\r\n          name: \"\",\r\n          users: [],\r\n          url: \"\",\r\n          label: \"project\",\r\n        },\r\n      ],\r\n      projectIndex: this.state.projectIndex + 1,\r\n    }));\r\n\r\n    this.state.formData.userProperties.jobs.push({\r\n      name: \"\",\r\n      users: [\"piet\", \"frank\", \"herman\", \"ingmar\"],\r\n      url: \"\",\r\n    });\r\n  }\r\n\r\n  changeProperty = (val, e) => {\r\n    var type = val.label;\r\n    var id = e.id;\r\n    var index = e.name;\r\n    var value = e.value;\r\n\r\n    if (type === \"skill\") {\r\n      var skillList = this.state.skillList;\r\n      var selectedSkill = skillList.find((x) => x.index === index);\r\n      var selectedIndex = skillList.findIndex((x) => x.index === index);\r\n      skillList[selectedIndex] = { index: index, name: value, label: \"skill\" };\r\n      this.setState({ skillList });\r\n      this.state.formData.userProperties.skills[index].name = value;\r\n    } else if (type === \"hobby\") {\r\n      var hobbyList = this.state.hobbyList;\r\n      var selectedHobby = hobbyList.find((x) => x.index === index);\r\n      var selectedIndex = hobbyList.findIndex((x) => x.index === index);\r\n      hobbyList[selectedIndex] = { index: index, name: value, label: \"hobby\" };\r\n      this.setState({ hobbyList });\r\n      this.state.formData.userProperties.hobbies[index].name = value;\r\n    } else if (type === \"interest\") {\r\n      var interestList = this.state.interestList;\r\n      var selectedInterest = interestList.find((x) => x.index === index);\r\n      var selectedIndex = interestList.findIndex((x) => x.index === index);\r\n      interestList[selectedIndex] = {\r\n        index: index,\r\n        name: value,\r\n        label: \"interest\",\r\n      };\r\n      this.setState({ interestList });\r\n      this.state.formData.userProperties.interests[index].name = value;\r\n    } else if (type === \"study\") {\r\n      var studyList = this.state.studyList;\r\n      var selectedStudy = studyList.find((x) => x.index === index);\r\n      var selectedIndex = studyList.findIndex((x) => x.index === index);\r\n      if (id.includes(\"study\")) {\r\n        studyList[selectedIndex].name = value;\r\n        this.setState({ studyList });\r\n        this.state.formData.userProperties.studies[index].name = value;\r\n      } else if (id.includes(\"school\")) {\r\n        studyList[selectedIndex].school = value;\r\n        this.setState({ studyList });\r\n        this.state.formData.userProperties.studies[index].school = value;\r\n      } else if (id.includes(\"city\")) {\r\n        studyList[selectedIndex].city = value;\r\n        this.setState({ studyList });\r\n        this.state.formData.userProperties.studies[index].city = value;\r\n      } else if (id.includes(\"endDate\")) {\r\n        studyList[selectedIndex].endDate = value;\r\n        this.setState({ studyList });\r\n        this.state.formData.userProperties.studies[index].endDate = value;\r\n      } else if (id.includes(\"startDate\")) {\r\n        studyList[selectedIndex].startDate = value;\r\n        this.setState({ studyList });\r\n        this.state.formData.userProperties.studies[index].startDate = value;\r\n      }\r\n      console.log(this.state.formData.userProperties.studies[index])\r\n    } else if (type === \"job\") {\r\n      var jobList = this.state.jobList;\r\n      var selectedJob = jobList.find((x) => x.index === index);\r\n      var selectedIndex = jobList.findIndex((x) => x.index === index);\r\n\r\n      if (id.includes(\"job\")) {\r\n        jobList[selectedIndex].name = value;\r\n        this.setState({ jobList });\r\n        this.state.formData.userProperties.jobs[index].name = value;\r\n      } else if (id.includes(\"endDate\")) {\r\n        jobList[selectedIndex].endDate = value;\r\n        this.setState({ jobList });\r\n        this.state.formData.userProperties.jobs[index].endDate = value;\r\n      } else if (id.includes(\"startDate\")) {\r\n        jobList[selectedIndex].startDate = value;\r\n        this.setState({ jobList });\r\n        this.state.formData.userProperties.jobs[index].startDate = value;\r\n      } else if (id.includes(\"companyName\")) {\r\n        jobList[selectedIndex].companyName = value;\r\n        this.setState({ jobList });\r\n        this.state.formData.userProperties.jobs[index].companyName = value;\r\n      }\r\n    }\r\n  }\r\n\r\n  clickOnDelete = (record) => {\r\n    var type = record.label;\r\n    var r;\r\n\r\n    if (type === \"interest\") {\r\n      r = this.state.formData.userProperties.interests.find((r) => r.name === record.name);\r\n\r\n      if(r.id !== 0 && r.id !== null){\r\n        this.state.deletedItems.interests.push(r);\r\n      }\r\n\r\n      // var interests = this.state.formData.userProperties.interests.filter((r) => r.name !== record.name);\r\n      // var formData = this.state.formData;\r\n      // formData.userProperties.interests = interests;\r\n\r\n      this.setState({\r\n        interestList: this.state.interestList.filter((i) => i !== record),\r\n        // formData: formData,\r\n      });\r\n    } else if (type === \"skill\") {\r\n      r = this.state.formData.userProperties.skills.find((s) => s.name === record.name);\r\n\r\n      if(r.id !== 0 && r.id !== null){\r\n        this.state.deletedItems.skills.push(r);\r\n      }\r\n\r\n      // var skills = this.state.formData.userProperties.skills.filter((r) => r.name !== record.name);\r\n      // var formData = this.state.formData;\r\n      // formData.userProperties.skills = skills;\r\n\r\n      this.setState({\r\n        skillList: this.state.skillList.filter((r) => r !== record),\r\n        // formData: formData,\r\n      });\r\n\r\n      console.log(\"Deleted skill \" + record.name);\r\n    } else if (type === \"hobby\") {\r\n      r = this.state.formData.userProperties.hobbies.find((r) => r.name === record.name);\r\n\r\n      if(r.id !== 0 && r.id !== null){\r\n         this.state.deletedItems.hobbies.push(r);\r\n      }\r\n\r\n      // var hobbies = this.state.formData.userProperties.hobbies.filter((r) => r.name !== record.name);\r\n      // var formData = this.state.formData;\r\n      // formData.userProperties.hobbies = hobbies;\r\n\r\n      this.setState({\r\n        hobbyList: this.state.hobbyList.filter((r) => r !== record),\r\n        // formData: formData,\r\n      });\r\n    } else if (type === \"study\") {\r\n      r = this.state.formData.userProperties.studies.find((r) => r.name === record.name);\r\n\r\n      if(r.id !== 0 && r.id !== null){\r\n        this.state.deletedItems.studies.push(r);\r\n      }\r\n\r\n      // var studies = this.state.formData.userProperties.studies.filter((r) => r.name !== record.name);\r\n      // var formData = this.state.formData;\r\n      // formData.userProperties.studies = studies;\r\n\r\n      this.setState({\r\n        studyList: this.state.studyList.filter((r) => r !== record),\r\n        // formData: formData,\r\n      });\r\n    } else if (type === \"job\") {\r\n      r = this.state.formData.userProperties.jobs.find((r) => r.name === record.name);\r\n\r\n      if(r.id !== 0 && r.id !== null){\r\n        this.state.deletedItems.jobs.push(r);\r\n      }\r\n\r\n      // var jobs = this.state.formData.userProperties.jobs.filter((r) => r.name !== record.name);\r\n      // var formData = this.state.formData;\r\n      // formData.userProperties.jobs = jobs;\r\n\r\n      this.setState({\r\n        jobList: this.state.jobList.filter((r) => r.name !== record.name),\r\n        // formData: formData,\r\n      });\r\n    }\r\n  }\r\n\r\n  // removeClick(i) {\r\n  //     let values = [...this.state.values];\r\n  //     values.splice(i, 1);\r\n  //     this.setState({values});\r\n  // }\r\n\r\n  handleSubmit = async(e) => {\r\n    if(!this.state.disconnected){\r\n    var personalData = this.state.formData;\r\n    var deletedProps = this.state.deletedItems;\r\n\r\n    // personalData.address =\r\n    //   personalData.street + \" \" + personalData.addressnumber;\r\n\r\n    // if (\r\n    //   personalData.addressaddition !== null &&\r\n    //   personalData.addressaddition !== \"\"\r\n    // ) {\r\n    //   personalData.address =\r\n    //     personalData.address + personalData.addressaddition;\r\n    // }\r\n\r\n    /******************************************************\r\n     *     implement a form validation function here      *\r\n     ******************************************************/\r\n\r\n    var result = await UserProfileService.updateProperties(personalData.userProperties);\r\n    var result2 = await UserProfileService.deleteProperties(deletedProps);\r\n\r\n    this.props.history.push(\"/guestprofile\")\r\n    }\r\n  };\r\n  // handleSubmit(event) {\r\n  //     alert('A name was submitted: ' + this.state.values.join(', '));\r\n  //     event.preventDefault();\r\n  // }\r\n\r\n  // handleChange = (event, newValue) => {\r\n  //     this.state.setState(\"value\",  newValue);\r\n  // };\r\n  // shiHandleTabsDisplay = () => {\r\n  //   this.setState({ shiActiveStep: this.state.shiActiveStep + 1 });\r\n  // };\r\n\r\n  // sjHandleTabsDisplay = () => {\r\n  //   this.setState({ sjActiveStep: this.state.sjActiveStep + 1 });\r\n  // };\r\n\r\n  render() {\r\n    const shiSteps = [\"Skills\", \"Hobbies\", \"Interests\"];\r\n    const sjSteps = [\"Studies\", \"Jobs\"];\r\n    const { classes } = this.props;\r\n    return (\r\n      <Grid container style={{ maxWidth: \"100%\", margin: \"15px auto\" }}>\r\n        <Grid item xs={12} md={12}>\r\n          <Card className={classes.card}>\r\n            {/* <CardMedia\r\n              className={classes.cardMedia}\r\n              image=\"https://yt3.ggpht.com/a/AATXAJwht8OvVO9HMRD7PFE4F6WczDX814Sxwswxuo2m0w=s900-c-k-c0x00ffffff-no-rj\"\r\n              title=\"profile\"\r\n            /> */}\r\n            <CardContent className={classes.cardContent}>\r\n              <Avatar\r\n                alt=\"User\"\r\n                src=\"https://yt3.ggpht.com/a/AATXAJwht8OvVO9HMRD7PFE4F6WczDX814Sxwswxuo2m0w=s900-c-k-c0x00ffffff-no-rj\"\r\n                className={classes.avatar}\r\n              ></Avatar>\r\n              <Typography gutterBottom variant=\"h3\" component=\"h2\">\r\n                {this.state.formData.lastName}, {this.state.formData.firstName} {\" \"}\r\n                {this.state.formData.prefix}\r\n              </Typography>\r\n              <Typography>Information about the user</Typography>\r\n            </CardContent>\r\n            <div className={classes.cardActions}>\r\n              <CheckIcon\r\n                style={{ color: this.state.disconnected ? \"white\" : \"#74C365\" }}\r\n                className={classes.settings}\r\n                onClick={this.handleSubmit}\r\n              ></CheckIcon>\r\n              <CloseIcon\r\n                style={{ color: this.state.disconnected ? \"white\" : \"#E23D28\" }}\r\n                className={classes.settings}\r\n                onClick={() => this.props.history.push(\"/guestprofile\")}\r\n              ></CloseIcon>\r\n              {/* <CancelIcon style={{ color: '#BEBEBE' }} className={classes.settings}></CancelIcon> */}\r\n              {/* <SettingsIcon className={classes.settings} onClick={() => this.props.history.push(\"/settings\")}>\r\n              </SettingsIcon> */}\r\n            </div>\r\n          </Card>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6} className={classes.tab1}>\r\n          <Tabs\r\n            value={this.state.shiValue}\r\n            onChange={this.shiHandleChange}\r\n            aria-label=\"nav tabs example\"\r\n          >\r\n            <LinkTab label={shiSteps[0]} {...a11yProps(0)} />\r\n            <LinkTab label={shiSteps[1]} {...a11yProps(1)} />\r\n            <LinkTab label={shiSteps[2]} {...a11yProps(2)} />\r\n          </Tabs>\r\n          <TabPanel\r\n            value={this.state.shiValue}\r\n            className={classes.tabPanel}\r\n            index={0}\r\n          >\r\n            <Grid item md={12}>\r\n              <Button\r\n                onClick={this.addNewSkill}\r\n                data-type=\"skill\"\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                disabled={this.state.disconnected}\r\n              >\r\n                Add skill\r\n              </Button>\r\n            </Grid>\r\n            <Grid item xs={12} md={6} style={{ textAlign: \"left\" }}>\r\n              {this.state.skillList.map((val, idx) => {\r\n                // var value = this.state.formData.skills[idx];\r\n                return (\r\n                  <Grid key={val.index} item md={12}>\r\n                    <TextField\r\n                      name={val.index}\r\n                      id={val.label + \"[\" + val.index + \"]\"}\r\n                      className={classes.textField}\r\n                      label={val.label}\r\n                      data-type={val.type}\r\n                      autoComplete={val.label}\r\n                      value={val.name}\r\n                      onChange={(e) => this.changeProperty(val, e.target)}\r\n                    />\r\n                    {/* {idx === 0 ? (\r\n                      \"\"\r\n                    ) : ( */}\r\n                      <button\r\n                        style={{\r\n                          padding: \"1px 6px\",\r\n                          verticalAlign: \"bottom\",\r\n                          marginLeft: \"5px\",\r\n                        }}\r\n                        className=\"field_manipulation_btn btn btn-danger\"\r\n                        onClick={() => this.clickOnDelete(val)}\r\n                      >\r\n                        <i className=\"fa fa-trash\"></i>\r\n                      </button>\r\n                    {/* )} */}\r\n                  </Grid>\r\n                );\r\n              })}\r\n              <br />\r\n            </Grid>\r\n            {/*<Review form={this.state.formData} onChange={this.handleChange.bind(this)}></Review>*/}\r\n            {/*        clickOnDelete={this.clickOnDelete}*/}\r\n            {/*        addNewSkill={this.addNewSkill}*/}\r\n            {/*        skillList={this.state.skillList}/>*/}\r\n          </TabPanel>\r\n          <TabPanel\r\n            value={this.state.shiValue}\r\n            className={classes.tabPanel}\r\n            index={1}\r\n          >\r\n            <Grid item md={12}>\r\n              <Button\r\n                onClick={this.addNewHobby}\r\n                data-type=\"hobby\"\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                disabled={this.state.disconnected}\r\n              >\r\n                Add hobby\r\n              </Button>\r\n            </Grid>\r\n            <Grid item xs={12} md={6} style={{ textAlign: \"left\" }}>\r\n              {this.state.hobbyList.map((val, idx) => {\r\n                return (\r\n                  <Grid key={val.index} item md={12}>\r\n                    <TextField\r\n                      name={val.index}\r\n                      id={val.label + \"[\" + val.index + \"]\"}\r\n                      label={val.label}\r\n                      data-type={val.label}\r\n                      autoComplete={val.label}\r\n                      value={val.name}\r\n                      onChange={(e) => this.changeProperty(val, e.target)}\r\n                    />\r\n                    {/* {idx === 0 ? (\r\n                      \"\"\r\n                    ) : ( */}\r\n                      <button\r\n                        style={{\r\n                          padding: \"1px 6px\",\r\n                          verticalAlign: \"bottom\",\r\n                          marginLeft: \"5px\",\r\n                        }}\r\n                        className=\"field_manipulation_btn btn btn-danger\"\r\n                        onClick={() => this.clickOnDelete(val)}\r\n                      >\r\n                        <i className=\"fa fa-trash\"></i>\r\n                      </button>\r\n                    {/* )} */}\r\n                  </Grid>\r\n                );\r\n              })}\r\n              <br />\r\n            </Grid>\r\n          </TabPanel>\r\n          <TabPanel\r\n            value={this.state.shiValue}\r\n            className={classes.tabPanel}\r\n            index={2}\r\n          >\r\n            <Grid item md={12}>\r\n              <Button\r\n                onClick={this.addNewInterest}\r\n                data-type=\"interest\"\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                disabled={this.state.disconnected}\r\n              >\r\n                Add interest\r\n              </Button>\r\n            </Grid>\r\n            <Grid item xs={12} md={6} style={{ textAlign: \"left\" }}>\r\n              {this.state.interestList.map((val, idx) => {\r\n                return (\r\n                  <Grid key={val.index} item md={12}>\r\n                    <TextField\r\n                      name={val.index}\r\n                      id={val.label + \"[\" + val.index + \"]\"}\r\n                      label={val.label}\r\n                      data-type={val.label}\r\n                      autoComplete={val.label}\r\n                      value={val.name}\r\n                      onChange={(e) => this.changeProperty(val, e.target)}\r\n                    />\r\n                    {/* {idx === 0 ? (\r\n                      \"\"\r\n                    ) : ( */}\r\n                      <button\r\n                        style={{\r\n                          padding: \"1px 6px\",\r\n                          verticalAlign: \"bottom\",\r\n                          marginLeft: \"5px\",\r\n                        }}\r\n                        className=\"field_manipulation_btn btn btn-danger\"\r\n                        onClick={() => this.clickOnDelete(val)}\r\n                      >\r\n                        <i className=\"fa fa-trash\"></i>\r\n                      </button>\r\n                    {/* )} */}\r\n                  </Grid>\r\n                );\r\n              })}\r\n              <br />\r\n            </Grid>\r\n          </TabPanel>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} sm={6} className={classes.tab2}>\r\n          <Tabs\r\n            value={this.state.sjValue}\r\n            onChange={this.sjHandleChange}\r\n            aria-label=\"nav tabs example\"\r\n          >\r\n            <LinkTab label={sjSteps[0]} {...a11yProps(0)} />\r\n            <LinkTab label={sjSteps[1]} {...a11yProps(1)} />\r\n          </Tabs>\r\n          <TabPanel\r\n            value={this.state.sjValue}\r\n            className={classes.tabPanel}\r\n            index={0}\r\n          >\r\n            <Grid item md={12}>\r\n              <Button\r\n                onClick={this.addNewStudy}\r\n                data-type=\"study\"\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                disabled={this.state.disconnected}\r\n              >\r\n                Add study\r\n              </Button>\r\n            </Grid>\r\n            <Grid item xs={12} md={6} style={{ textAlign: \"left\" }}>\r\n              {this.state.studyList.map((val, idx) => {\r\n                return (\r\n                  <Grid key={val.index} item md={12}>\r\n                    <TextField\r\n                      name={val.index}\r\n                      id={val.label + \"[\" + idx + \"]\"}\r\n                      label={val.label}\r\n                      data-type={val.label}\r\n                      autoComplete={val.label}\r\n                      value={val.name}\r\n                      onChange={(e) => this.changeProperty(val, e.target)}\r\n                    />\r\n\r\n                    <TextField\r\n                      name={val.index}\r\n                      id={\"school[\" + idx + \"]\"}\r\n                      label=\"school\"\r\n                      data-type={val.label}\r\n                      autoComplete={val.label}\r\n                      value={val.school}\r\n                      onChange={(e) => this.changeProperty(val, e.target)}\r\n                    />\r\n\r\n                    <TextField\r\n                      name={val.index}\r\n                      id={\"city[\" + idx + \"]\"}\r\n                      label=\"city\"\r\n                      data-type={val.label}\r\n                      autoComplete={val.label}\r\n                      value={val.city}\r\n                      onChange={(e) => this.changeProperty(val, e.target)}\r\n                    />\r\n\r\n                    <TextField\r\n                      name={val.index}\r\n                      type=\"date\"\r\n                      id={\"startDate[\" + idx + \"]\"}\r\n                      label=\"study start\"\r\n                      InputLabelProps={{\r\n                        shrink: true,\r\n                      }}\r\n                      data-type={val.label}\r\n                      value={val.startDate}\r\n                      onChange={(e) => this.changeProperty(val, e.target)}\r\n                    />\r\n\r\n                    <TextField\r\n                      name={val.index}\r\n                      type=\"date\"\r\n                      id={\"endDate[\" + idx + \"]\"}\r\n                      label=\"study end\"\r\n                      InputLabelProps={{\r\n                        shrink: true,\r\n                      }}\r\n                      data-type={val.label}\r\n                      value={val.endDate}\r\n                      onChange={(e) => this.changeProperty(val, e.target)}\r\n                    />\r\n\r\n                    {/* {idx === 0 ? (\r\n                      \"\"\r\n                    ) : ( */}\r\n                      <button\r\n                        style={{\r\n                          padding: \"1px 6px\",\r\n                          verticalAlign: \"bottom\",\r\n                          marginLeft: \"5px\",\r\n                        }}\r\n                        className=\"field_manipulation_btn btn btn-danger\"\r\n                        onClick={() => this.clickOnDelete(val)}\r\n                      >\r\n                        <i className=\"fa fa-trash\"></i>\r\n                      </button>\r\n                    {/* )} */}\r\n                  </Grid>\r\n                );\r\n              })}\r\n              <br />\r\n            </Grid>\r\n            {/*<Review form={this.state.formData} onChange={this.handleChange.bind(this)}*/}\r\n            {/*        clickOnDelete={this.clickOnDelete}*/}\r\n            {/*        addNewSkill={this.addNewSkill}*/}\r\n            {/*        skillList={this.state.skillList}/>*/}\r\n          </TabPanel>\r\n          <TabPanel\r\n            className={classes.tabPanel}\r\n            value={this.state.sjValue}\r\n            index={1}\r\n          >\r\n            <Grid item md={12}>\r\n              <Button\r\n                onClick={this.addNewJob}\r\n                data-type=\"job\"\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                disabled={this.state.disconnected}\r\n              >\r\n                Add job\r\n              </Button>\r\n            </Grid>\r\n            <Grid item xs={12} md={6} style={{ textAlign: \"left\" }}>\r\n              {this.state.jobList.map((val, idx) => {\r\n                return (\r\n                  <Grid key={val.index} item md={12}>\r\n                    <TextField\r\n                      name={val.index}\r\n                      id={val.label + \"[\" + idx + \"]\"}\r\n                      label={val.label}\r\n                      data-type={val.label}\r\n                      autoComplete={val.label}\r\n                      value={val.name}\r\n                      onChange={(e) => this.changeProperty(val, e.target)}\r\n                    />\r\n\r\n                    <TextField\r\n                      name={val.index}\r\n                      id={\"companyName[\" + idx + \"]\"}\r\n                      label=\"company\"\r\n                      data-type={val.label}\r\n                      autoComplete={val.label}\r\n                      value={val.companyName}\r\n                      onChange={(e) => this.changeProperty(val, e.target)}\r\n                    />\r\n\r\n                    <TextField\r\n                      name={val.index}\r\n                      type=\"date\"\r\n                      id={\"startDate[\" + idx + \"]\"}\r\n                      label=\"job start\"\r\n                      InputLabelProps={{\r\n                        shrink: true,\r\n                      }}\r\n                      data-type={val.label}\r\n                      value={val.startDate}\r\n                      onChange={(e) => this.changeProperty(val, e.target)}\r\n                    />\r\n\r\n                    <TextField\r\n                      name={val.index}\r\n                      type=\"date\"\r\n                      id={\"endDate[\" + idx + \"]\"}\r\n                      label=\"job end\"\r\n                      InputLabelProps={{\r\n                        shrink: true,\r\n                      }}\r\n                      data-type={val.label}\r\n                      value={val.endDate}\r\n                      onChange={(e) => this.changeProperty(val, e.target)}\r\n                    />\r\n\r\n                    {/* {idx === 0 ? (\r\n                      \"\"\r\n                    ) : ( */}\r\n                      <button\r\n                        style={{\r\n                          padding: \"1px 6px\",\r\n                          verticalAlign: \"bottom\",\r\n                          marginLeft: \"5px\",\r\n                        }}\r\n                        className=\"field_manipulation_btn btn btn-danger\"\r\n                        onClick={() => this.clickOnDelete(val)}\r\n                      >\r\n                        <i className=\"fa fa-trash\"></i>\r\n                      </button>\r\n                    {/* )} */}\r\n                  </Grid>\r\n                );\r\n              })}\r\n              <br />\r\n            </Grid>\r\n          </TabPanel>\r\n        </Grid>\r\n        \r\n        <Grid item xs={12} md={12}>\r\n          <div className={classes.projectGroup}>\r\n            <Typography variant=\"h4\">Projects</Typography>\r\n            <Button disabled={this.state.disconnected} variant=\"outlined\" color=\"primary\" onClick={this.addNewProject} data-type=\"project\">\r\n              ADD PROJECT\r\n            </Button><br/><br/>\r\n\r\n            {this.state.projectList.map((p) => {\r\n              return (\r\n                  <Card className={classes.projectCard}>\r\n                    <CardContent >\r\n                      <TextField\r\n                        name={\"\"}\r\n                        id={p.index}\r\n                        label={\"name\"}\r\n                        data-type={\"\"}\r\n                        autoComplete={\"\"}\r\n                        value={p.name}\r\n                      />\r\n                      {p.users.map((u) => (\r\n                        <Typography variant=\"h6\">{u}</Typography>\r\n                      ))}\r\n                      <TextField\r\n                        name={\"\"}\r\n                        id={p.index}\r\n                        label={\"url\"}\r\n                        data-type={\"\"}\r\n                        autoComplete={\"\"}\r\n                        value={p.url}\r\n                      />\r\n\r\n                      {/* {p.index === 0 ? (\r\n                        \"\"\r\n                      ) : ( */}\r\n                        <div>\r\n                          <br></br>\r\n                          <button\r\n                            style={{\r\n                              padding: \"1px 6px\",\r\n                              verticalAlign: \"bottom\",\r\n                              marginLeft: \"5px\",\r\n                            }}\r\n                            className=\"field_manipulation_btn btn btn-danger\"\r\n                          >\r\n                            <i className=\"fa fa-trash\"></i>\r\n                          </button>\r\n                        </div>\r\n                      {/* )} */}\r\n                    </CardContent>\r\n                  </Card>\r\n              );\r\n            })}\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(profile);\r\n","D:\\DevelopmentProjects\\java\\groupProject\\gps-fontysin-ui\\src\\components\\chat.js",[],"D:\\DevelopmentProjects\\java\\groupProject\\gps-fontysin-ui\\src\\components\\exportCV.js",["155","156"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport ReactPDF, { PDFDownloadLink,Text, Document, Font, Page, StyleSheet, Image, View,} from \"@react-pdf/renderer\"\r\nimport Header from \"./ResumeComponents/header\"\r\nimport Education from \"./ResumeComponents/education\"\r\nimport Experience from \"./ResumeComponents/experience\"\r\nimport Skills from \"./ResumeComponents/skills\"\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\n\r\nconst styles = StyleSheet.create({\r\n    page: {\r\n        padding: 30,\r\n    },\r\n    container: {\r\n        flex: 1,\r\n        flexDirection: 'row',\r\n        '@media max-width: 400': {\r\n            flexDirection: 'column',\r\n        },\r\n    },\r\n    image: {\r\n        marginBottom: 10,\r\n    },\r\n    leftColumn: {\r\n        flexDirection: 'column',\r\n        width: 170,\r\n        paddingTop: 30,\r\n        paddingRight: 15,\r\n        '@media max-width: 400': {\r\n            width: '100%',\r\n            paddingRight: 0,\r\n        },\r\n        '@media orientation: landscape': {\r\n            width: 200,\r\n        },\r\n    },\r\n    footer: {\r\n        fontSize: 12,\r\n        textAlign: 'center',\r\n        marginTop: 25,\r\n        paddingTop: 10,\r\n        borderWidth: 3,\r\n        borderColor: 'gray',\r\n        borderStyle: 'dashed',\r\n        '@media orientation: landscape': {\r\n            marginTop: 10,\r\n        },\r\n    },\r\n});\r\n\r\nFont.register( {\r\n    family: 'Open Sans',\r\n    src: \"./fonts/fonts/Open_Sans/OpenSans-Regular.ttf\",\r\n});\r\nFont.register( {\r\n    family: 'Lato',\r\n    src: \"./fonts/Lato/Lato-Regular.ttf\",\r\n});\r\nFont.register( {\r\n    family: 'Lato Italic',\r\n    src: \"./fonts/Lato/Lato-Italic.ttf\",\r\n});\r\nFont.register( {\r\n    family: 'Lato Bold',\r\n    src: \"./fonts/Lato/Lato-Bold.ttf\",\r\n});\r\n\r\n\r\nconst Resume = props => (\r\n    <Page {...props} style={styles.page}>\r\n        <Header />\r\n        <View style={styles.container}>\r\n            <View style={styles.leftColumn}>\r\n                <Image\r\n                    src=\"https://www.indiewire.com/wp-content/uploads/2017/07/the-big-lebowski-e1520362797168.jpg\"\r\n                    style={styles.image}\r\n                />\r\n                <Education />\r\n                <Skills />\r\n            </View>\r\n            <Experience />\r\n        </View>\r\n        <Text style={styles.footer}>This IS the candidate you are looking for</Text>\r\n    </Page>\r\n);\r\nconst Output = () => (\r\n    <Document\r\n        author=\"Dude\"\r\n        keywords=\"Cool resume bro, resume\"\r\n        subject=\"The resume of the Dude\"\r\n        title=\"Resume\"\r\n    >\r\n        <Resume size=\"A4\" />\r\n        <Resume orientation=\"landscape\" size=\"A4\" />\r\n        <Resume size={[380, 1250]} />\r\n    </Document>\r\n);\r\nclass Component extends React.Component {\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <Document>\r\n                DOWNLOAD PDF:\r\n                    <PDFDownloadLink document={<Output/>} fileName=\"somename.pdf\">\r\n                        {({ blob, url, loading, error }) =>\r\n                            loading ? \"Loading document...\" : \"Download now!\"\r\n                        }\r\n                    </PDFDownloadLink>\r\n    </Document>\r\n    );\r\n    }\r\n}\r\nexport default withStyles(styles)(Component)\r\n","D:\\DevelopmentProjects\\java\\groupProject\\gps-fontysin-ui\\src\\components\\guestProfile\\GuestProfile.js",["157","158"],"import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport UserProfileService from \"../../services/UserProfileService\";\r\nimport UserProfile from \"./../../entities/UserProfile\";\r\n\r\nconst styles = (theme) => ({\r\n  appBar: {\r\n    position: \"relative\",\r\n  },\r\n  layout: {\r\n    width: \"auto\",\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\r\n      width: 600,\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n  },\r\n  card: {\r\n    padding: theme.spacing(5),\r\n    margin: theme.spacing(2, 0),\r\n  },\r\n  stepper: {\r\n    padding: theme.spacing(3, 0, 5),\r\n  },\r\n  buttons: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(3),\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  description: {\r\n    fontSize: \"18px\",\r\n    fontWeight: 400,\r\n  },\r\n  banner: {\r\n    backgroundColor: \"#8D5C97\",\r\n    margin: theme.spacing(-5, -5, 2, -5),\r\n  },\r\n  cardActions: {\r\n    float: \"left\",\r\n    width: \"10%\",\r\n  },\r\n  cardContent: {\r\n    flexGrow: 1,\r\n    color: \"white\",\r\n    textAlign: \"center\",\r\n  },\r\n  avatar: {\r\n    width: \"125px\",\r\n    height: \"125px\",\r\n    display: \"inline-block\",\r\n    marginTop: \"1%\",\r\n  },\r\n  expHeader: {\r\n    fontSize: \"16px\",\r\n    fontWeight: 600,\r\n  },\r\n  collectionItem: {\r\n    lineHeight: \"18px\",\r\n    fontSize: \"14px\",\r\n  },\r\n  seperator: {\r\n    backgroundColor: \"#8D5C97\",\r\n  },\r\n  footer: {\r\n    width: \"100%\",\r\n    height: \"60px\",\r\n  },\r\n  projectIcon: {\r\n    // width: '100%',\r\n    height: \"115px\",\r\n  },\r\n  imgContainer: {\r\n    textAlign: \"center\",\r\n  },\r\n  projectCard: {\r\n    padding: theme.spacing(0, 2),\r\n  },\r\n  proCardContent: {\r\n    border: \"2px solid #8D5C97\",\r\n  },\r\n  settings: {\r\n    width: \"50px\",\r\n    height: \"50px\",\r\n    cursor: \"pointer\",\r\n    float: \"left\",\r\n    color: \"#D0D0D0\",\r\n  },\r\n    // border: \"2px solid #8D5C97\",\r\n    boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\r\n    padding: \"15px\"\r\n  }\r\n);\r\n\r\nconst languages = Object([\r\n  { code: \"NL\", language: \"Dutch\" },\r\n  { code: \"EN\", language: \"English\" },\r\n  { code: \"DE\", language: \"German\" },\r\n  { code: \"FR\", language: \"French\" },\r\n  { code: \"IT\", language: \"Italian\" },\r\n  { code: \"PL\", language: \"Polish\" },\r\n  { code: \"SW\", language: \"Swiss\" },\r\n  { code: \"SP\", language: \"Spanish\" },\r\n]);\r\n\r\nconst nationalities = Object([\r\n  { code: \"NL\", language: \"Netherlands\" },\r\n  { code: \"GB\", language: \"Great Britain\" },\r\n  { code: \"US\", language: \"United States\" },\r\n  { code: \"DE\", language: \"Germany\" },\r\n  { code: \"BE\", language: \"Belgium\" },\r\n  { code: \"PL\", language: \"Poland\" },\r\n  { code: \"CH\", language: \"Switzerland\" },\r\n  { code: \"IT\", language: \"Italy\" },\r\n  { code: \"IE\", language: \"Ireland\" },\r\n  { code: \"ES\", language: \"Spain\" },\r\n]);\r\n\r\nclass GuestProfile extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      pcn: this.props.match.params.pcn,\r\n      userProfile: new UserProfile(),\r\n      username: \"\",\r\n    };\r\n\r\n    this.getUserData();\r\n  }\r\n\r\n  getUserData() {\r\n    UserProfileService.findByPcn(this.state.pcn)\r\n      .then((response) => {\r\n        var Profile = new UserProfile();\r\n        Profile.loadFromObject(response.data);\r\n\r\n        this.setState({ userProfile: Profile });\r\n\r\n        var name = \"\";\r\n        if (this.state.userProfile.prefix.trim() !== \"\") {\r\n          name =\r\n            this.state.userProfile.firstName +\r\n            \" \" +\r\n            this.state.userProfile.prefix +\r\n            \" \" +\r\n            this.state.userProfile.lastName;\r\n        } else {\r\n          name =\r\n            this.state.userProfile.firstName +\r\n            \" \" +\r\n            this.state.userProfile.lastName;\r\n        }\r\n\r\n        this.setState({ username: name });\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"error 3 \" + error);\r\n      });\r\n  }\r\n\r\n  getMonth() {}\r\n\r\n  getDateDiference(startdate, enddate) {\r\n    var diff = Math.floor(enddate.getTime() - startdate.getTime());\r\n    var day = 1000 * 60 * 60 * 24;\r\n    var month = day * 31;\r\n    var year = month * 12;\r\n\r\n    var yearcount = Math.floor(diff / year);\r\n    var yearsInMiliSeconds = yearcount * year;\r\n\r\n    var remainingDiff = diff - yearsInMiliSeconds;\r\n\r\n    var monthcount = Math.floor(remainingDiff / month);\r\n    var monthsInMiliSeconds = monthcount * month;\r\n\r\n    remainingDiff = remainingDiff - monthsInMiliSeconds;\r\n\r\n    var daycount = Math.floor(remainingDiff / day);\r\n\r\n    var years = yearcount === 1 ? yearcount + \" year \" : yearcount + \" years \";\r\n    var months =\r\n      monthcount === 1 ? monthcount + \" month \" : monthcount + \" months \";\r\n    var days = daycount === 1 ? daycount + \" day \" : daycount + \" days \";\r\n\r\n    var response = \"\";\r\n\r\n    if (yearcount > 0) {\r\n      response = years + months;\r\n    } else if (monthcount > 0) {\r\n      response = months + days;\r\n    } else {\r\n      response = days;\r\n    }\r\n\r\n    return response;\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const userProfile = this.state.userProfile;\r\n    const monthNames = [\r\n      \"Jan\",\r\n      \"Feb\",\r\n      \"Mar\",\r\n      \"Apr\",\r\n      \"May\",\r\n      \"Jun\",\r\n      \"Jul\",\r\n      \"Aug\",\r\n      \"Sep\",\r\n      \"Oct\",\r\n      \"Nov\",\r\n      \"Dec\",\r\n    ];\r\n    var tempNationality = nationalities.filter((obj) => {\r\n      return obj.code === userProfile.nationality;\r\n    })[0];\r\n\r\n    const nationality =\r\n      tempNationality === undefined ? \"\" : tempNationality.language;\r\n\r\n    return (\r\n      <Grid container style={{ maxWidth: \"1100px\", margin: \"15px auto\" }}>\r\n        <Grid item md={12} style={{ marginRight: \"25px\" }}>\r\n          {/* personal data */}\r\n          <Card className={classes.card}>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12\">\r\n                <Card className={classes.banner}>\r\n                  <CardContent className={classes.cardContent}>\r\n                    <Avatar\r\n                      alt=\"User\"\r\n                      src=\"https://yt3.ggpht.com/a/AATXAJwht8OvVO9HMRD7PFE4F6WczDX814Sxwswxuo2m0w=s900-c-k-c0x00ffffff-no-rj\"\r\n                      className={classes.avatar}\r\n                    ></Avatar>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"h4\">\r\n                      {this.state.username}\r\n                    </Typography>\r\n                    <Typography>Information about the user</Typography>\r\n                  </CardContent>\r\n                  <div className={classes.cardActions}>\r\n                    {localStorage.getItem(\"pcn\") === this.state.pcn ? (\r\n                      <div>\r\n                        <SettingsIcon\r\n                          className={classes.settings}\r\n                          onClick={() => this.props.history.push(\"/settings\")}\r\n                        />\r\n                        <EditIcon\r\n                          className={classes.settings}\r\n                          onClick={() => this.props.history.push(\"/profile\")}\r\n                        />\r\n                      </div>\r\n                    ) : (\r\n                      <div></div>\r\n                    )}\r\n                  </div>\r\n                </Card>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                  Personal information\r\n                </Typography>\r\n                <table>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>Nationality: </td>\r\n                      <td style={{ paddingLeft: \"10px\" }}>{nationality}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Birthday: </td>\r\n                      <td style={{ paddingLeft: \"10px\" }}>\r\n                        {userProfile.birthday}\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Languages: </td>\r\n                      <td style={{ paddingLeft: \"10px\" }}>\r\n                        {userProfile.languages\r\n                          .map(function (elem) {\r\n                            return languages.filter((obj) => {\r\n                              return obj.code === elem.name;\r\n                            })[0].language;\r\n                          })\r\n                          .join(\", \")}\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                  Contact information\r\n                </Typography>\r\n\r\n                <table>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>Phone number: </td>\r\n                      <td style={{ paddingLeft: \"10px\" }}>\r\n                        {this.state.userProfile.phoneNumber}\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Email address: </td>\r\n                      <td style={{ paddingLeft: \"10px\" }}>\r\n                        {this.state.userProfile.emailAddress}\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </Card>\r\n\r\n          {/* study + job history */}\r\n          <Card className={classes.card}>\r\n            <div className=\"row\">\r\n              {/* studies */}\r\n              <div className=\"col-md-6\">\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                  School history\r\n                </Typography>\r\n\r\n                {userProfile.studies.map((val, idx) => {\r\n                  console.log(userProfile.studies);\r\n                  var date1 = new Date(val.startDate);\r\n                  var date2 =\r\n                    val.endDate === null ? new Date() : new Date(val.endDate);\r\n\r\n                  var startdate =\r\n                    monthNames[date1.getMonth()] + \" \" + date1.getFullYear();\r\n                  var enddate =\r\n                    val.endDate === null\r\n                      ? \"heden\"\r\n                      : monthNames[date2.getMonth()] +\r\n                        \" \" +\r\n                        date2.getFullYear();\r\n\r\n                  var duration = this.getDateDiference(date1, date2);\r\n\r\n                  if (idx === 0) {\r\n                    return (\r\n                      <Grid key={idx}>\r\n                        <table className={classes.collectionItem}>\r\n                          <tbody>\r\n                            <tr>\r\n                              <th className={classes.expHeader}>{val.name}</th>\r\n                            </tr>\r\n                            <tr>\r\n                              <td>\r\n                                {val.school} - {val.city}\r\n                              </td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td>\r\n                                {startdate} - {enddate} : {duration.toString()}\r\n                              </td>\r\n                            </tr>\r\n                          </tbody>\r\n                        </table>\r\n                      </Grid>\r\n                    );\r\n                  }\r\n\r\n                  return (\r\n                    <Grid key={idx}>\r\n                      <hr className={classes.seperator} />\r\n\r\n                      <table className={classes.collectionItem}>\r\n                        <tbody>\r\n                          <tr>\r\n                            <th className={classes.expHeader}>{val.name}</th>\r\n                          </tr>\r\n                          <tr>\r\n                            <td>\r\n                              {val.school} - {val.city}\r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <td>\r\n                              {startdate} - {enddate} : {duration.toString()}\r\n                            </td>\r\n                          </tr>\r\n                        </tbody>\r\n                      </table>\r\n                    </Grid>\r\n                  );\r\n                })}\r\n              </div>\r\n\r\n              {/* jobs */}\r\n              <div className=\"col-md-6\">\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                  Job history\r\n                </Typography>\r\n\r\n                {userProfile.jobs.map((val, idx) => {\r\n                  var date1 = new Date(val.startDate);\r\n                  var date2 =\r\n                    val.endDate === null ? new Date() : new Date(val.endDate);\r\n\r\n                  var startdate =\r\n                    monthNames[date1.getMonth()] + \" \" + date1.getFullYear();\r\n                  var enddate =\r\n                    val.endDate === null\r\n                      ? \"heden\"\r\n                      : monthNames[date2.getMonth()] +\r\n                        \" \" +\r\n                        date2.getFullYear();\r\n\r\n                  var duration = this.getDateDiference(date1, date2);\r\n\r\n                  if (idx === 0) {\r\n                    return (\r\n                      <Grid key={idx}>\r\n                        <table className={classes.collectionItem}>\r\n                          <tbody>\r\n                            <tr>\r\n                              <th className={classes.expHeader}>{val.name}</th>\r\n                            </tr>\r\n                            <tr>\r\n                              <td>{val.companyName}</td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td>\r\n                                {startdate} - {enddate} : {duration.toString()}\r\n                              </td>\r\n                            </tr>\r\n                          </tbody>\r\n                        </table>\r\n                      </Grid>\r\n                    );\r\n                  }\r\n\r\n                  return (\r\n                    <Grid key={idx}>\r\n                      <hr className={classes.seperator} />\r\n\r\n                      <table className={classes.collectionItem}>\r\n                        <tbody>\r\n                          <tr>\r\n                            <th className={classes.expHeader}>{val.name}</th>\r\n                          </tr>\r\n                          <tr>\r\n                            <td>{val.companyName}</td>\r\n                          </tr>\r\n                          <tr>\r\n                            <td>\r\n                              {startdate} - {enddate} : {duration.toString()}\r\n                            </td>\r\n                          </tr>\r\n                        </tbody>\r\n                      </table>\r\n                    </Grid>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          </Card>\r\n\r\n          {/* about me */}\r\n          <Card className={classes.card}>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              About me\r\n            </Typography>\r\n\r\n            <div className=\"row\">\r\n              <div className=\"col-md-4\">\r\n                <Typography gutterBottom>Hobbies</Typography>\r\n                <ul>\r\n                  {userProfile.hobbies.map((val, idx) => {\r\n                    return <li key={idx}>{val.name}</li>;\r\n                  })}\r\n                </ul>\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <Typography gutterBottom>Interests</Typography>\r\n                <ul>\r\n                  {userProfile.interests.map((val, idx) => {\r\n                    return <li key={idx}>{val.name}</li>;\r\n                  })}\r\n                </ul>\r\n              </div>\r\n              <div className=\"col-md-4\">\r\n                <Typography gutterBottom>Skills</Typography>\r\n                <ul>\r\n                  {userProfile.skills.map((val, idx) => {\r\n                    return <li key={idx}>{val.name}</li>;\r\n                  })}\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </Card>\r\n\r\n          {/* projects */}\r\n          <Card className={classes.card}>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Projects\r\n            </Typography>\r\n\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\" style={{ padding: \"15px\" }}>\r\n                {\" \"}\r\n                {/* add border */}\r\n                <div className={classes.proCardContent}>\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                      <a href=\"link\">\r\n                        <table>\r\n                          <thead>\r\n                            <tr>\r\n                              <th>project name</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            <tr>\r\n                              <td className={classes.imgContainer}>\r\n                                <img\r\n                                  src={\r\n                                    process.env.PUBLIC_URL +\r\n                                    \"/assets/github-small.png\"\r\n                                  }\r\n                                  alt=\"no alt\"\r\n                                  className={classes.projectIcon}\r\n                                />\r\n                              </td>\r\n                            </tr>\r\n                          </tbody>\r\n                        </table>\r\n                      </a>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-6\">\r\n                      <Grid item md={12}>\r\n                        Collaberators\r\n                      </Grid>\r\n                      <Grid>\r\n                        <ul>\r\n                          <li>colaberator 1</li>\r\n                          <li>colaberator 2</li>\r\n                          <li>colaberator 3</li>\r\n                          <li>colaberator 4</li>\r\n                        </ul>\r\n                      </Grid>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-md-6\" style={{ padding: \"15px\" }}>\r\n                {\" \"}\r\n                {/* add border */}\r\n                <div className={classes.proCardContent}>\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                      <a href=\"\">\r\n                        <table>\r\n                          <thead>\r\n                            <tr>\r\n                              <th>project name</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            <tr>\r\n                              <td className={classes.imgContainer}>\r\n                                <img\r\n                                  src={\r\n                                    process.env.PUBLIC_URL +\r\n                                    \"/assets/github-small.png\"\r\n                                  }\r\n                                  className={classes.projectIcon}\r\n                                />\r\n                              </td>\r\n                            </tr>\r\n                          </tbody>\r\n                        </table>\r\n                      </a>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-6\">\r\n                      <Grid item md={12}>\r\n                        Collaberators\r\n                      </Grid>\r\n                      <Grid>\r\n                        <ul>\r\n                          <li>colaberator 1</li>\r\n                          <li>colaberator 2</li>\r\n                          <li>colaberator 3</li>\r\n                          <li>colaberator 4</li>\r\n                        </ul>\r\n                      </Grid>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Card>\r\n        </Grid>\r\n        <div className={classes.footer}></div>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(GuestProfile);\r\n","D:\\DevelopmentProjects\\java\\groupProject\\gps-fontysin-ui\\src\\components\\AddressForm.js",[],"D:\\DevelopmentProjects\\java\\groupProject\\gps-fontysin-ui\\src\\components\\WorkForm.js",["159"],"import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst WorkForm = (props) => {\r\n  const handleChange = e => props.onChange(e.target, e.target.dataset.category);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Typography variant=\"h6\"  gutterBottom>\r\n        Study details\r\n      </Typography>\r\n      <Grid container spacing={3}>\r\n        \r\n        <Grid item xs={12} md={6}>\r\n          <TextField \r\n            required \r\n            id=\"studyname\" \r\n            name=\"name\"\r\n            label=\"Current study\" \r\n            fullWidth \r\n            value={props.form.studies[0].name}\r\n            autoComplete=\"study\" \r\n            onChange={handleChange}\r\n            inputProps={{\r\n              'data-category':'studies'\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <TextField \r\n            required \r\n            id=\"studyschool\" \r\n            name=\"school\"\r\n            label=\"School name\" \r\n            fullWidth \r\n            value={props.form.studies[0].school}\r\n            autoComplete=\"study\" \r\n            onChange={handleChange}\r\n            inputProps={{\r\n              'data-category':'studies'\r\n            }}\r\n          />\r\n        </Grid>\r\n        \r\n      </Grid>\r\n      <Grid container spacing={3}>\r\n        \r\n        <Grid item xs={12} md={6}>\r\n          <TextField \r\n            required \r\n            id=\"studycity\" \r\n            name=\"city\"\r\n            label=\"City\" \r\n            fullWidth \r\n            value={props.form.studies[0].city}\r\n            autoComplete=\"study\" \r\n            onChange={handleChange}\r\n            inputProps={{\r\n              'data-category':'studies'\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n        <TextField\r\n          id=\"studydate\"\r\n          name=\"startDate\"\r\n          label=\"Start date\"\r\n          type=\"date\"\r\n          value={props.form.studies[0].startDate}\r\n          onChange={handleChange}\r\n          InputLabelProps={{\r\n          shrink: true,\r\n          }}\r\n          inputProps={{\r\n            'data-category':'studies'\r\n          }}\r\n        />\r\n        </Grid>\r\n        \r\n      </Grid>\r\n\r\n      <br /><br />\r\n\r\n      <Typography variant=\"h6\"  gutterBottom>\r\n        Work details\r\n      </Typography>\r\n\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} md={6}>\r\n          <TextField \r\n            id=\"jobname\" \r\n            name=\"name\"\r\n            label=\"Job description\" \r\n            fullWidth \r\n            value={props.form.jobs[0].name}\r\n            autoComplete=\"job\" \r\n            onChange={handleChange}\r\n            inputProps={{\r\n              'data-category':'jobs'\r\n            }}\r\n          />\r\n        </Grid>\r\n        \r\n        <Grid item xs={12} md={6}>\r\n          <TextField \r\n            id=\"jobcompany\" \r\n            name=\"companyName\"\r\n            label=\"Company name\" \r\n            fullWidth \r\n            value={props.form.jobs[0].companyName}\r\n            autoComplete=\"job\" \r\n            onChange={handleChange}\r\n            inputProps={{\r\n              'data-category':'jobs'\r\n            }}\r\n          />\r\n        </Grid>\r\n        \r\n      </Grid>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} md={6}>\r\n          <TextField\r\n              id=\"jobdate\"\r\n              name=\"startDate\"\r\n              label=\"Start date\"\r\n              type=\"date\"\r\n              value={props.form.jobs[0].startDate}\r\n              onChange={handleChange}\r\n              inputProps={{\r\n                'data-category':'jobs'\r\n              }}\r\n              InputLabelProps={{\r\n              shrink: true,\r\n              }}\r\n            />\r\n        </Grid>\r\n      </Grid>\r\n      <br />\r\n\r\n      <Grid item xs={12}>\r\n        <p>You can always add your study and job history later on your profile page!</p>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default WorkForm;","D:\\DevelopmentProjects\\java\\groupProject\\gps-fontysin-ui\\src\\components\\Review.js",[],"D:\\DevelopmentProjects\\java\\groupProject\\gps-fontysin-ui\\src\\services\\UserProfileService.js",[],"D:\\DevelopmentProjects\\java\\groupProject\\gps-fontysin-ui\\src\\components\\ResumeComponents\\experience.js",[],"D:\\DevelopmentProjects\\java\\groupProject\\gps-fontysin-ui\\src\\components\\ResumeComponents\\skills.js",[],"D:\\DevelopmentProjects\\java\\groupProject\\gps-fontysin-ui\\src\\components\\ResumeComponents\\education.js",["160"],"import React from \"react\";\r\n\r\nimport { Text, View, StyleSheet } from \"@react-pdf/renderer\";\r\nimport Title from \"./title\";\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        marginBottom: 10,\r\n    },\r\n    school: {\r\n        // fontFamily: 'Lato Bold',\r\n        fontSize: 10,\r\n    },\r\n    degree: {\r\n        // fontFamily: 'Lato',\r\n        fontSize: 10,\r\n    },\r\n    candidate: {\r\n        // fontFamily: 'Lato Italic',\r\n        fontSize: 10,\r\n    },\r\n});\r\n\r\nexport default () => (\r\n    <View style={styles.container}>\r\n        <Title>Education</Title>\r\n        <Text style={styles.school}>Jedi Academy</Text>\r\n        <Text style={styles.degree}>Jedi Master</Text>\r\n        <Text style={styles.candidate}>A long, long time ago</Text>\r\n    </View>\r\n);","D:\\DevelopmentProjects\\java\\groupProject\\gps-fontysin-ui\\src\\components\\ResumeComponents\\header.js",["161"],"import React from 'react';\r\n\r\nimport { Link, Text, View, StyleSheet } from \"@react-pdf/renderer\";\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flexDirection: 'row',\r\n        borderBottomWidth: 2,\r\n        borderBottomColor: '#112131',\r\n        borderBottomStyle: 'solid',\r\n        alignItems: 'stretch',\r\n    },\r\n    detailColumn: {\r\n        flexDirection: 'column',\r\n        flexGrow: 9,\r\n        textTransform: 'uppercase',\r\n    },\r\n    linkColumn: {\r\n        flexDirection: 'column',\r\n        flexGrow: 2,\r\n        alignSelf: 'flex-end',\r\n        justifySelf: 'flex-end',\r\n    },\r\n    name: {\r\n        fontSize: 24,\r\n        // fontFamily: 'Lato Bold',\r\n    },\r\n    subtitle: {\r\n        fontSize: 10,\r\n        justifySelf: 'flex-end',\r\n        // fontFamily: 'Lato',\r\n    },\r\n    link: {\r\n        // fontFamily: 'Lato',\r\n        fontSize: 10,\r\n        color: 'black',\r\n        textDecoration: 'none',\r\n        alignSelf: 'flex-end',\r\n        justifySelf: 'flex-end',\r\n    },\r\n});\r\n\r\nexport default () => (\r\n    <View style={styles.container}>\r\n        <View style={styles.detailColumn}>\r\n            <Text style={styles.name}>Luke Skywalker</Text>\r\n            <Text style={styles.subtitle}>Jedi Master</Text>\r\n        </View>\r\n        <View style={styles.linkColumn}>\r\n            <Link style={styles.link}>luke@theforce.com</Link>\r\n        </View>\r\n    </View>\r\n);","D:\\DevelopmentProjects\\java\\groupProject\\gps-fontysin-ui\\src\\entities\\UserProfile.js",[],"D:\\DevelopmentProjects\\java\\groupProject\\gps-fontysin-ui\\src\\globals\\globalVariables.js",[],"D:\\DevelopmentProjects\\java\\groupProject\\gps-fontysin-ui\\src\\components\\ResumeComponents\\title.js",[],"D:\\DevelopmentProjects\\java\\groupProject\\gps-fontysin-ui\\src\\components\\ResumeComponents\\list.js",[],{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","severity":1,"message":"167","line":12,"column":50,"nodeType":"168","messageId":"169","endLine":12,"endColumn":60},{"ruleId":"166","severity":1,"message":"170","line":2,"column":8,"nodeType":"168","messageId":"169","endLine":2,"endColumn":14},{"ruleId":"166","severity":1,"message":"171","line":4,"column":8,"nodeType":"168","messageId":"169","endLine":4,"endColumn":18},{"ruleId":"166","severity":1,"message":"172","line":11,"column":8,"nodeType":"168","messageId":"169","endLine":11,"endColumn":15},{"ruleId":"166","severity":1,"message":"173","line":16,"column":8,"nodeType":"168","messageId":"169","endLine":16,"endColumn":12},{"ruleId":"166","severity":1,"message":"174","line":50,"column":7,"nodeType":"168","messageId":"169","endLine":50,"endColumn":12},{"ruleId":"175","severity":1,"message":"176","line":63,"column":6,"nodeType":"177","endLine":63,"endColumn":8,"suggestions":"178"},{"ruleId":"179","severity":1,"message":"180","line":74,"column":29,"nodeType":"181","messageId":"182","endLine":74,"endColumn":31},{"ruleId":"166","severity":1,"message":"183","line":95,"column":7,"nodeType":"168","messageId":"169","endLine":95,"endColumn":19},{"ruleId":"184","severity":1,"message":"185","line":141,"column":12,"nodeType":"186","endLine":141,"endColumn":22},{"ruleId":"184","severity":1,"message":"185","line":165,"column":9,"nodeType":"186","endLine":165,"endColumn":28},{"ruleId":"184","severity":1,"message":"185","line":170,"column":9,"nodeType":"186","endLine":170,"endColumn":28},{"ruleId":"184","severity":1,"message":"185","line":175,"column":9,"nodeType":"186","endLine":175,"endColumn":28},{"ruleId":"184","severity":1,"message":"185","line":180,"column":9,"nodeType":"186","endLine":180,"endColumn":28},{"ruleId":"166","severity":1,"message":"187","line":487,"column":11,"nodeType":"168","messageId":"169","endLine":487,"endColumn":24},{"ruleId":"184","severity":1,"message":"185","line":491,"column":7,"nodeType":"186","endLine":491,"endColumn":55},{"ruleId":"166","severity":1,"message":"188","line":494,"column":11,"nodeType":"168","messageId":"169","endLine":494,"endColumn":24},{"ruleId":"189","severity":1,"message":"190","line":495,"column":11,"nodeType":"168","messageId":"191","endLine":495,"endColumn":24},{"ruleId":"184","severity":1,"message":"185","line":498,"column":7,"nodeType":"186","endLine":498,"endColumn":56},{"ruleId":"166","severity":1,"message":"192","line":501,"column":11,"nodeType":"168","messageId":"169","endLine":501,"endColumn":27},{"ruleId":"189","severity":1,"message":"190","line":502,"column":11,"nodeType":"168","messageId":"191","endLine":502,"endColumn":24},{"ruleId":"184","severity":1,"message":"185","line":509,"column":7,"nodeType":"186","endLine":509,"endColumn":58},{"ruleId":"166","severity":1,"message":"193","line":512,"column":11,"nodeType":"168","messageId":"169","endLine":512,"endColumn":24},{"ruleId":"189","severity":1,"message":"190","line":513,"column":11,"nodeType":"168","messageId":"191","endLine":513,"endColumn":24},{"ruleId":"184","severity":1,"message":"185","line":517,"column":9,"nodeType":"186","endLine":517,"endColumn":58},{"ruleId":"184","severity":1,"message":"185","line":521,"column":9,"nodeType":"186","endLine":521,"endColumn":58},{"ruleId":"184","severity":1,"message":"185","line":525,"column":9,"nodeType":"186","endLine":525,"endColumn":58},{"ruleId":"184","severity":1,"message":"185","line":529,"column":9,"nodeType":"186","endLine":529,"endColumn":58},{"ruleId":"184","severity":1,"message":"185","line":533,"column":9,"nodeType":"186","endLine":533,"endColumn":58},{"ruleId":"166","severity":1,"message":"194","line":538,"column":11,"nodeType":"168","messageId":"169","endLine":538,"endColumn":22},{"ruleId":"189","severity":1,"message":"190","line":539,"column":11,"nodeType":"168","messageId":"191","endLine":539,"endColumn":24},{"ruleId":"184","severity":1,"message":"185","line":544,"column":9,"nodeType":"186","endLine":544,"endColumn":55},{"ruleId":"184","severity":1,"message":"185","line":548,"column":9,"nodeType":"186","endLine":548,"endColumn":55},{"ruleId":"184","severity":1,"message":"185","line":552,"column":9,"nodeType":"186","endLine":552,"endColumn":55},{"ruleId":"184","severity":1,"message":"185","line":556,"column":9,"nodeType":"186","endLine":556,"endColumn":55},{"ruleId":"166","severity":1,"message":"195","line":671,"column":9,"nodeType":"168","messageId":"169","endLine":671,"endColumn":15},{"ruleId":"166","severity":1,"message":"196","line":672,"column":9,"nodeType":"168","messageId":"169","endLine":672,"endColumn":16},{"ruleId":"166","severity":1,"message":"197","line":2,"column":8,"nodeType":"168","messageId":"169","endLine":2,"endColumn":16},{"ruleId":"166","severity":1,"message":"198","line":3,"column":8,"nodeType":"168","messageId":"169","endLine":3,"endColumn":16},{"ruleId":"199","severity":1,"message":"200","line":571,"column":23,"nodeType":"201","endLine":571,"endColumn":34},{"ruleId":"202","severity":1,"message":"203","line":581,"column":33,"nodeType":"201","endLine":587,"endColumn":35},{"ruleId":"166","severity":1,"message":"204","line":4,"column":8,"nodeType":"168","messageId":"169","endLine":4,"endColumn":12},{"ruleId":"205","severity":1,"message":"206","line":24,"column":1,"nodeType":"207","endLine":31,"endColumn":3},{"ruleId":"205","severity":1,"message":"206","line":43,"column":1,"nodeType":"207","endLine":53,"endColumn":3},"no-native-reassign",["208"],"no-negated-in-lhs",["209"],"no-unused-vars","'withRouter' is defined but never used.","Identifier","unusedVar","'AppBar' is defined but never used.","'CameraIcon' is defined but never used.","'Toolbar' is defined but never used.","'Link' is defined but never used.","'cards' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.match.params.query'. Either include it or remove the dependency array.","ArrayExpression",["210"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'personalData' is assigned a value but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'selectedSkill' is assigned a value but never used.","'selectedHobby' is assigned a value but never used.","no-redeclare","'selectedIndex' is already defined.","redeclared","'selectedInterest' is assigned a value but never used.","'selectedStudy' is assigned a value but never used.","'selectedJob' is assigned a value but never used.","'result' is assigned a value but never used.","'result2' is assigned a value but never used.","'ReactDOM' is defined but never used.","'ReactPDF' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Card' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"211","fix":"212"},"Update the dependencies array to be: [props.match.params.query]",{"range":"213","text":"214"},[1865,1867],"[props.match.params.query]"]